@page "/crear-producto"
@inject ProductoService ProductoService
@inject CategoriaService CategoriaService
@using VentasApp.Core.Entities;
@using VentasApp.Application.Services;
@*@using Microsoft.AspNetCore.Components.Forms*@
@inject NavigationManager NavigationManager


<h3>Crear Producto</h3>

<EditForm Model="producto" OnValidSubmit="HandleValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="form-group">
        <label for="nombre">Nombre</label>
        <InputText id="nombre" @bind-Value="producto.Nombre" class="form-control" />
    </div>

    <div class="form-group">
        <label for="descripcion">Descripción</label>
        <InputText id="descripcion" @bind-Value="producto.Descripcion" class="form-control" />
    </div>

    <div class="form-group">
        <label for="precio">Precio</label>
        <InputNumber id="precio" @bind-Value="producto.Precio" class="form-control" />
    </div>

    <div class="form-group">
        <label for="stock">Stock</label>
        <InputNumber id="stock" @bind-Value="producto.Stock" class="form-control" />
    </div>

    <div class="form-group">
        <label for="categoria">Categoría</label>
        <InputSelect id="categoria" @bind-Value="producto.CategoriaId" class="form-control">
            <option value="">Seleccione una categoría</option>
            @foreach (var categoria in categorias)
            {
                <option value="@categoria.Id">@categoria.Nombre</option>
            }
        </InputSelect>
    </div>

    <button type="submit" class="btn btn-primary">Guardar Producto</button>
</EditForm>

@code {
    private Producto producto = new Producto();
    private List<Categoria> categorias = new List<Categoria>();

    protected override async Task OnInitializedAsync()
    {
        // Cargar las categorías desde la base de datos
        categorias = await CategoriaService.GetCategorias();
    }

    private async Task HandleValidSubmit()
    {
        if (producto.CategoriaId == 0)
        {
            // Asegurarse de que se haya seleccionado una categoría
            return;
        }

        await ProductoService.AgregarProductoAsync(producto);
        NavigationManager.NavigateTo("/productos"); // Redirigir al listado de productos
    }
}
