@page "/crear-venta"
@inject VentaService VentaService
@inject ProductoService ProductoService
@using VentasApp.Core.Entities
@using VentasApp.Application.Services;
@using Microsoft.AspNetCore.Components.Forms

<h3>Crear Venta</h3>

<EditForm Model="venta" OnValidSubmit="HandleValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="row">
            <div class="col-md-6 offset-md-3">
                <div class="form-group">
                    <label for="productos">Seleccionar Productos</label>
                    <InputSelect id="productos" @bind-Value="productoSeleccionado">
                        @foreach (var producto in productos)
                        {
                            <option value="@producto.Id">@producto.Nombre</option>
                        }
                    </InputSelect>
                </div>

                <div class="form-group" "d-flex justify-content-between">
                    <label for="cantidad">Cantidad</label>
                    <InputNumber id="cantidad" @bind-Value="cantidad" class="form-control" />
                </div>

                <button type="submit" class="btn btn-primary">Guardar Venta</button>
            </div>
    </div>
</EditForm>


@code {
    private Venta venta = new Venta { FechaVenta = DateTime.Now, VentaProductos = new List<VentaProducto>() };
    private List<Producto> productos = new List<Producto>();
    private int productoSeleccionado;
    private int cantidad;

    protected override async Task OnInitializedAsync()
    {
        productos = await ProductoService.ObtenerProductosAsync();      // GetProductos
    }

    private void HandleValidSubmit()
    {
        var producto = productos.FirstOrDefault(p => p.Id == productoSeleccionado);
        if (producto != null)
        {
            venta.VentaProductos.Add(new VentaProducto
                {
                    Producto = producto,
                    ProductoId = producto.Id,
                    Cantidad = cantidad,
                    Precio = producto.Precio
                });
            venta.Total = venta.VentaProductos.Sum(vp => vp.Cantidad * vp.Precio);

            // Guardar la venta
            VentaService.AddVenta(venta);
        }
    }
}
